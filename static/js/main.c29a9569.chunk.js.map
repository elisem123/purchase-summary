{"version":3,"sources":["server.js","actions/index.js","components/Item/index.js","components/DisplayItem/index.js","components/Promo/index.js","App.js","reducers/index.js","store/createStore.js","serviceWorker.js","index.js"],"names":["pricingData","pricing","subtotal","savings","tax","total","zip","itemDetails","item_name","quantity","img","price","new_price","fetchData","dispatch","type","delay","arguments","length","undefined","Promise","resolve","reject","setTimeout","getPricingData","then","data","getData","Item","_this$props$detail","this","props","detail","curr_price","discount","toFixed","react_default","a","createElement","className","src","alt","class","Component","connect","state","itemDetail","DisplayItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleToggle","setState","display","toggleClasses","cx","Hidden","Display","onClick","components_Item","color","Promo","textChange","e","text","target","value","handleClick","toUpperCase","code","applyDiscount","error","onChange","style","num","useDiscount","App","getPrice","_this$props$pricing","currSubtotal","currTax","currTotal","Number","loading","components_DisplayItem","components_Promo","initState","reducer","action","objectSpread","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c29a9569.chunk.js","sourcesContent":["const pricingData = {\n  pricing: {\n    subtotal: 102.96,\n    savings: 3.85,\n    tax: 8.92,\n    total: 108.03,\n    zip: 85050\n  },\n  itemDetails: {\n    item_name: 'Essentials by OFM ESS-3085 Racing Style Leather Gaming Chair, Red',\n    quantity: 1,\n    img: 'https://i5.walmartimages.com/asr/e73e1252-642c-4473-93ea-fd3b564a7027_1.3e81ea58fa3042452fe185129a4a865f.jpeg?odnHeight=180&odnWidth=180&odnBg=FFFFFF',\n    price: 102.96,\n    new_price: 99.11\n  },\n};\n\nexport const getPricingData = (delay = 1000) => {\n  return new Promise(function(resolve, reject){\n    setTimeout(function() {\n      resolve(pricingData)\n    }, delay);\n  });\n};","import {getPricingData} from '../server';\n\nconst loading = () => {\n  return {\n    type: 'LOADING'\n  }\n}\nconst getData = data => {\n  return {\n    type: 'GET_DATA',\n    data\n  }\n}\n\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(loading());\n    getPricingData()\n      .then(data => {\n        dispatch(getData(data))\n      });\n  }\n}\n\nexport const useDiscount = num => {\n  return {\n    type: \"DISCOUNT\",\n    num\n  }\n}","import React, { Component } from 'react';\nimport \"./Item.css\";\nimport { connect } from 'react-redux';\n\nclass Item extends Component{\n  render(){\n    const {item_name, quantity, img, price, new_price} = this.props.detail;\n    let curr_price = (new_price * this.props.discount).toFixed(2);\n    return(<div className=\"Item\">\n      <img className=\"Image\" src={img} alt=\"Leather Chair Red\"/>\n      <div class=\"Info\">\n        <div>{item_name}</div>\n        <div>\n          <span className=\"New-price\">${curr_price}</span>\n          <span className=\"Qty\">Qty: {quantity}</span>\n        </div>\n        <div className=\"Old-price\">{price}</div>\n      </div>\n    </div>);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    detail: state.itemDetail,\n    discount: state.discount\n  }\n}\n\nexport default connect(mapStateToProps)(Item);\n","import React, { Component } from 'react';\nimport Item from '../Item';\nimport cx from 'classnames';\nimport './DisplayItem.css';\n\nclass DisplayItem extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      display: false\n    }\n  }\n\n  handleToggle = () => {\n    this.setState({display: !this.state.display});\n  }\n\n  render(){\n    let toggleClasses = cx({\n      'Hidden': !this.state.display,\n      'Display': this.state.display\n    });\n    return(<div className=\"Item-detail\">\n      <div className=\"Toggle-item\" onClick={this.handleToggle}>\n      {this.state.display ? \n      <div><span className=\"Text\">Hide item details</span><span className=\"Sign\">-</span></div> \n      : \n      <div><span className=\"Text\">See item details</span><span className=\"Sign\">+</span></div> }\n      </div>\n\n      <div className={toggleClasses}>\n        <Item />\n      </div>\n      <hr color=\"#ddd\"/>\n    </div>);\n  }\n}\n\nexport default DisplayItem;","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport \"./Promo.css\";\nimport { connect } from 'react-redux';\nimport { useDiscount } from '../../actions';\n\nclass Promo extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      display: false,\n      text: \"\",\n      error: false\n    }\n  }\n\n  textChange = e => {\n    this.setState({text: e.target.value});\n  }\n\n  handleClick = e => {\n    if (this.state.text.toUpperCase() === this.props.code){\n      this.props.applyDiscount(0.9);\n      this.setState({error: false})\n    } else {\n      this.props.applyDiscount(1);\n      this.setState({error: true});\n    }\n  }\n\n  handleToggle = () => {\n    this.setState({display: !this.state.display});\n  }\n\n  render(){\n    let toggleClasses = cx({\n      'Hidden': !this.state.display,\n      'Display': this.state.display\n    });\n    return(\n      <div className=\"Promo\">\n      <div className=\"Toggle-promo\" onClick={this.handleToggle}>\n      {this.state.display ? \n      <div><span className=\"Text\">Hide promo code</span><span className=\"Sign\">-</span></div> \n      : \n      <div><span className=\"Text\">Apply promo code</span><span className=\"Sign\">+</span></div> }\n      </div>\n\n      <div className={toggleClasses}>\n        <div className=\"Promo-text\">Promo Code</div>\n        <input className=\"Code\" type=\"text\" value={this.state.text} onChange={this.textChange}></input>\n        <button className=\"Button\" onClick={this.handleClick}>Apply</button>\n        <p style={{color: 'red'}}>{this.state.error ? \"!Invalid Code\" : \"\"}</p>\n      </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    code: state.code\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    applyDiscount: (num) => dispatch(useDiscount(num))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Promo);","import React, { Component } from 'react';\nimport { fetchData } from './actions';\nimport { connect } from \"react-redux\";\nimport DisplayItem from './components/DisplayItem';\nimport Promo from './components/Promo';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.getPrice();\n  }\n  render() {\n    const {subtotal, savings, tax, total, zip} = this.props.pricing;\n    let currSubtotal = (subtotal * this.props.discount).toFixed(2);\n    let currTax = (currSubtotal * (tax / subtotal)).toFixed(2);\n    let currTotal = Number(currSubtotal) + Number(currTax) - savings;\n    if (this.props.loading) {\n      return <p className=\"Loading\">Loading...</p>\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"Prices\">\n        <span>Subtotal</span> <span className=\"Dollors\">${currSubtotal}</span>\n        </div>\n        <p className=\"Applied\">{this.props.discount === 0.9 ? '10% Discount Applied' : ''}</p>\n        \n        <div className=\"Prices\">\n          <div className=\"Tooltip\">\n            Pickup savings\n            <span className=\"Tooltip-text\">Picking up your order in the store helps cut costs, and we pass the savings on to you</span>\n          </div> \n          <span className=\"Dollors\" style={{color: \"red\"}}>${savings}</span>\n        </div>\n        \n        <div className=\"Prices\">\n        <span>Est. taxes & fees</span> <span className=\"Dollors\">${currTax}</span>\n        <div>(Based on {zip})</div>\n        </div>\n        <hr color=\"#ddd\"/>\n\n        <div className=\"Total\">Est. total <span className=\"Dollors\">${currTotal}</span></div>\n        <DisplayItem />\n        <Promo />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pricing: state.pricing,\n    discount: state.discount,\n    loading: state.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPrice: () => dispatch(fetchData())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\n  pricing: {},\n  itemDetail: {},\n  discount: 1,\n  loading: false,\n  code: 'DISCOUNT'\n}\n\nconst reducer = (state = initState, action) => {\n  switch(action.type){\n    case \"LOADING\":\n      return {...state, loading: true};\n    case \"GET_DATA\":\n      return {\n        ...state, \n        pricing: action.data.pricing, \n        itemDetail:action.data.itemDetails,\n        loading: false\n      }\n    case 'DISCOUNT':\n      return {...state, discount: action.num}\n    default: \n      return state;\n  }\n}\n\nexport default reducer;\n\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n  // other store enhancers if any\n);\n\nconst store = createStore(reducer, enhancer);\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/createStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}